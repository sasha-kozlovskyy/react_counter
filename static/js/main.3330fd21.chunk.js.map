{"version":3,"sources":["Counter.jsx","App.js","index.js"],"names":["Counter","count","addOne","addOneHundred","increase","type","className","onClick","App","state","setState","prevState","add100","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOAIaA,G,YAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,cAAeC,EAAjC,EAAiCA,SAAjC,OACrB,oCACE,qCAEGH,GAEH,4BACEI,KAAK,SACLC,UAAU,SACVC,QAASL,GAHX,UAOA,4BACEG,KAAK,SACLC,UAAU,SACVC,QAASJ,GAHX,iBAOA,4BACEE,KAAK,SACLC,UAAU,SACVC,QAASH,GAHX,eCoBWI,E,4MAvCbC,MAAQ,CACNR,MAAO,G,EAGTC,OAAS,WACP,EAAKQ,UAAS,SAAAC,GAAS,MAAK,CAC1BV,MAAOU,EAAUV,MAAQ,O,EAI7BW,OAAS,WACP,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BV,MAAOU,EAAUV,MAAQ,S,EAI7BG,SAAW,WACL,EAAKK,MAAMR,MAAQ,IAAM,GAC3B,EAAKW,SAGP,EAAKV,U,4CAGP,WACE,OACE,yBAAKI,UAAU,OACb,kBAAC,EAAD,CACEL,MAAOY,KAAKJ,MAAMR,MAClBC,OAAQW,KAAKX,OACbC,cAAeU,KAAKD,OACpBR,SAAUS,KAAKT,gB,GAhCPU,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3330fd21.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nexport const Counter = ({ count, addOne, addOneHundred, increase }) => (\n  <>\n    <h1>\n      Count:\n      {count}\n    </h1>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={addOne}\n    >\n      AddOne\n    </button>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={addOneHundred}\n    >\n      AddOneHundred\n    </button>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={increase}\n    >\n      Increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  addOneHundred: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 100,\n    }));\n  };\n\n  increase = () => {\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Counter\n          count={this.state.count}\n          addOne={this.addOne}\n          addOneHundred={this.add100}\n          increase={this.increase}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}